{"version":3,"sources":["ExpandedText.js","IsoField.js","Properties.js","SelectMessageDialog.js","ResponseSegment.js","MessageStructure.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["ExpandedText","props","state","show","value","closeThis","bind","valueChanged","event","this","setState","target","onClose","prevProps","prevState","snapshot","Fragment","style","borderBottom","borderColor","fontFamily","width","minHeight","maxHeight","onChange","height","Button","size","float","fontSize","onClick","React","Component","IsoField","fieldValueChanged","fieldSelectionChanged","onFieldUpdate","appendFieldContent","setSelected","setNewValue","showExpanded","closeExpanded","selectable","readOnly","selected","id2Value","fieldValue","get","field","Id","defaultFieldValue","includes","Name","Array","fill","reduce","p","c","isoMsg","set","newValue","console","log","fieldName","ChangeType","Type","Children","forEach","f","currentVal","bits","from","Position","turnOff","i","obj","checked","content","parentField","key","push","selectionColumnContent","align","type","disabled","className","FixedSize","DataEncoding","toLowerCase","LengthIndicatorSize","LengthEncoding","children","ondblclick","marginRight","colspan","appProps","baseUrl","sendMsgUrl","loadMsgUrl","allSpecsUrl","templateUrl","SelectMessageDialog","selectedMsg","closeDialogSuccess","closeDialogFail","selectedMsgChanged","axios","params","specId","msgId","then","res","savedMsgs","data","catch","e","errorMessage","response","closeLoadMsgDialog","map","sm","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","ResponseSegment","msgTemplate","idToField","Map","Value","Fields","border","backgroundColor","colSpan","MessageStructure","specs","spec","msg","loaded","shouldShow","showMsgTemplate","targetServerIp","targetServerPort","mliType","errDialogVisible","showLoadMessagesDialog","showResponse","responseData","sendToHost","addFieldContent","serverIpChanged","serverPortChanged","mliTypeChanged","showErrorDialog","closeErrorDialog","processError","showUnImplementedError","dsName","fd","fData","cf","postData","JSON","stringify","post","status","getMessageTemplate","pSpec","pMsg","find","s","Messages","m","url","err","level","alignContent","alignSelf","verticalAlign","alignItems","margin","NavBar","currentSpec","currentSpecMsg","specChanged","messageChanged","msgTemplateRef","createRef","getCurrentSpec","left","top","specsDropDown","messagesDropDown","ref","getSpecByName","name","App","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b81e8766.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nexport default class ExpandedText extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {show: this.props.show, value: this.props.value};\r\n    this.closeThis = this.closeThis.bind(this);\r\n    this.valueChanged = this.valueChanged.bind(this);\r\n  }\r\n\r\n  valueChanged(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  closeThis() {\r\n    this.setState({show: true});\r\n    this.props.onClose(this.state.value);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.show === false && this.props.show === true && this.state.show\r\n        === false) {\r\n      this.setState({show: true, value: this.props.value})\r\n    } else if (this.props.show === false && this.state.show\r\n        === true) {\r\n      this.setState({show: false, value: this.props.value})\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n        (this.state.show === true) ?\r\n\r\n            <React.Fragment>\r\n              <div style={{borderBottom: 'solid', borderColor: 'red'}}>\r\n\r\n        <textarea\r\n            style={{\r\n              fontFamily: \"courier new\",\r\n              width: '100%',\r\n              minHeight: '80px',\r\n              maxHeight: '200px'\r\n            }}\r\n            onChange={this.valueChanged} value={this.state.value}/>\r\n\r\n                <div style={{height: '25px'}}>\r\n                  <Button size={\"sm\"} style={{\r\n                    float: 'right', fontSize: '10px'\r\n                  }} onClick={this.closeThis}> OK </Button>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n            :\r\n            null\r\n    );\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport ExpandedText from './ExpandedText.js'\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n// IsoField represents a single field from a ISO8583 specification\r\nexport default class IsoField extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //this.state = {fieldValue: \"\", selected: false};\r\n    this.fieldValueChanged = this.fieldValueChanged.bind(this);\r\n    this.fieldSelectionChanged = this.fieldSelectionChanged.bind(this);\r\n    //this.msgFromChildField = this.msgFromChildField.bind(this);\r\n    this.onFieldUpdate = this.onFieldUpdate.bind(this);\r\n    this.appendFieldContent = this.appendFieldContent.bind(this);\r\n    this.setSelected = this.setSelected.bind(this);\r\n    this.setNewValue = this.setNewValue.bind(this);\r\n    this.showExpanded = this.showExpanded.bind(this);\r\n    this.closeExpanded = this.closeExpanded.bind(this);\r\n\r\n    //if the field is Message Type, MTI or Bitmap - it should stay selected\r\n    //because they're mandatory fields in ISO\r\n\r\n    this.selectable = true;\r\n\r\n    //readOnly is true when displaying a response segment\r\n    if (this.props.readOnly) {\r\n      this.selectable = false;\r\n      this.state = {\r\n        selected: true,\r\n        id2Value: this.props.id2Value,\r\n        fieldValue: this.props.id2Value.get(this.props.field.Id),\r\n        showExpanded: false\r\n      };\r\n    } else {\r\n      let defaultFieldValue = \"\";\r\n      if ([\"Message Type\", \"MTI\", \"Bitmap\"].includes(\r\n          this.props.field.Name)) {\r\n        this.selectable = false;\r\n        if (this.props.field.Name === \"Bitmap\") {\r\n          defaultFieldValue = Array(128).fill('0').reduce((p = \"\", c) => p + c);\r\n        }\r\n\r\n        this.state = {\r\n          selected: true,\r\n          fieldValue: defaultFieldValue,\r\n          showExpanded: false\r\n        };\r\n      } else {\r\n        this.state = {\r\n          selected: false,\r\n          fieldValue: defaultFieldValue,\r\n          showExpanded: false\r\n        };\r\n      }\r\n      this.props.isoMsg.set(this.props.field.Id, this);\r\n    }\r\n  }\r\n\r\n  showExpanded() {\r\n    this.setState({showExpanded: true});\r\n  }\r\n\r\n  closeExpanded() {\r\n    this.setState({showExpanded: false});\r\n  }\r\n\r\n  setNewValue(newValue) {\r\n    this.setState({fieldValue: newValue, showExpanded: false});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.id2Value !== this.props.id2Value) {\r\n      this.setState({\r\n        fieldValue: this.props.id2Value.get(this.props.field.Id),\r\n        id2Value: this.props.id2Value\r\n      });\r\n    }\r\n  }\r\n\r\n  onFieldUpdate(event) {\r\n    console.log(\r\n        `${this.props.field.Name}: Child field ${event.fieldName} has been updated. ChangeType: ${event.ChangeType}`);\r\n\r\n    //this.props.field != null &&\r\n\r\n    if (this.props.field.Type === 'Bitmapped') {\r\n      // get the position of the field\r\n      this.props.field.Children.forEach(f => {\r\n\r\n        if (f.Name === event.fieldName) {\r\n          let currentVal = this.state.fieldValue;\r\n          let bits = Array.from(currentVal);\r\n          console.log(\"Changing bit \" + f.Position);\r\n          if (event.ChangeType === 'FieldSelected') {\r\n            bits[f.Position - 1] = '1';\r\n            if (f.Position > 64) {\r\n              bits[0] = '1';\r\n            }\r\n          } else if (event.ChangeType === 'FieldDeselected') {\r\n            bits[f.Position - 1] = '0';\r\n\r\n            //if all bits from 65 to 128 are off then turn bit 1 off\r\n            let turnOff = true;\r\n            for (let i = 65; i <= 128; i++) {\r\n              if (bits[i - 1] === '1') {\r\n                turnOff = false;\r\n                break;\r\n              }\r\n            }\r\n            if (turnOff) {\r\n              bits[0] = '0';\r\n            }\r\n\r\n          }\r\n          let newValue = bits.reduce((p = \"\", c) => p + c);\r\n          this.setState({fieldValue: newValue})\r\n\r\n        }\r\n      })\r\n    } else {\r\n\r\n      let obj = {fieldName: this.props.field.Name};\r\n      if (event.ChangeType === 'FieldSelected') {\r\n        console.log(\"setting self as selected\", this.props.field.Name);\r\n        this.setState({selected: true});\r\n        obj.ChangeType = \"FieldSelected\";\r\n      } else if (event.ChangeType === 'FieldDeselected') {\r\n        this.setState({selected: false});\r\n        obj.ChangeType = \"FieldDeselected\";\r\n      }\r\n\r\n      // for fixed and variable type field, if they have children\r\n      // the whole set of children and then let the parent know too\r\n\r\n      this.props.field.Children.forEach(c => {\r\n        if (event.ChangeType === 'FieldSelected') {\r\n          this.props.isoMsg.get(c.Id).setSelected(true);\r\n        } else if (event.ChangeType === 'FieldDeselected') {\r\n          this.props.isoMsg.get(c.Id).setSelected(false);\r\n        }\r\n      });\r\n\r\n      this.props.onFieldUpdate(obj);\r\n\r\n    }\r\n  }\r\n\r\n  setSelected(selected) {\r\n\r\n    this.setState({selected: selected});\r\n    this.props.field.Children.forEach(c => {\r\n      this.props.isoMsg.get(c.Id).setSelected(selected);\r\n    });\r\n\r\n  }\r\n\r\n  fieldSelectionChanged(event) {\r\n\r\n    let obj = {fieldName: this.props.field.Name};\r\n    let selected = false;\r\n    if (event.target.checked) {\r\n      obj.ChangeType = \"FieldSelected\";\r\n      selected = true;\r\n    } else {\r\n      obj.ChangeType = \"FieldDeselected\";\r\n    }\r\n\r\n    if (this.props.field.Type !== \"Bitmapped\") {\r\n      this.setSelected(selected);\r\n    }\r\n    this.props.onFieldUpdate(obj)\r\n  }\r\n\r\n  fieldValueChanged(event) {\r\n    this.setState({fieldValue: event.target.value});\r\n    let obj = {fieldName: this.props.field.Name, ChangeType: \"ValueChanged\"};\r\n    this.props.onFieldUpdate(obj)\r\n  }\r\n\r\n  appendFieldContent(content, field, parentField, id2Value) {\r\n\r\n    let key = field.Id;\r\n    if (this.props.readOnly) {\r\n      key = 'response_seg_' + field.Id;\r\n    }\r\n    //console.log(\"laying out - \" + field.Name + \" => \" + parentField.Name);\r\n    content.push(<IsoField key={key} field={field} id2Value={id2Value}\r\n                           readOnly={this.props.readOnly}\r\n                           parentField={parentField} isoMsg={this.props.isoMsg}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  render() {\r\n\r\n    let selectionColumnContent;\r\n\r\n    if (this.selectable) {\r\n      selectionColumnContent =\r\n          <td align={\"center\"}><input type={\"checkbox\"}\r\n                                      checked={this.state.selected}\r\n                                      onChange={this.fieldSelectionChanged}/>\r\n          </td>\r\n    } else {\r\n      selectionColumnContent =\r\n          <td align={\"center\"}><input type={\"checkbox\"}\r\n                                      disabled={true} checked={true}\r\n                                      onChange={this.fieldSelectionChanged}/>\r\n          </td>\r\n    }\r\n\r\n    let fieldSpecColumnContent;\r\n    if (this.props.field.Type === 'Fixed') {\r\n      fieldSpecColumnContent = <React.Fragment>\r\n        <td>\r\n          <div className={\"class_small_div\"}>F</div>\r\n          <div className={\"class_small_div\"}>{this.props.field.FixedSize}</div>\r\n          <div\r\n              className={\"class_small_div\"}>{this.props.field.DataEncoding.toLowerCase()}</div>\r\n        </td>\r\n      </React.Fragment>;\r\n    } else if (this.props.field.Type === 'Variable') {\r\n      fieldSpecColumnContent = <React.Fragment>\r\n        <td>\r\n          <div className={\"class_small_div\"}>V</div>\r\n          <div\r\n              className={\"class_small_div\"}>{this.props.field.LengthIndicatorSize}</div>\r\n          <div\r\n              className={\"class_small_div\"}>{this.props.field.LengthEncoding.toLowerCase()}</div>\r\n          <div\r\n              className={\"class_small_div\"}>{this.props.field.DataEncoding.toLowerCase()}</div>\r\n\r\n        </td>\r\n      </React.Fragment>;\r\n    } else if (this.props.field.Type === 'Bitmapped') {\r\n\r\n      fieldSpecColumnContent = <React.Fragment>\r\n        <td>\r\n          <div className={\"class_small_div\"}>B</div>\r\n        </td>\r\n      </React.Fragment>;\r\n    }\r\n\r\n    let children = [];\r\n\r\n    this.props.field.Children.forEach(\r\n        c => this.appendFieldContent(children, c, this.props.field,\r\n            this.state.id2Value));\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <tr>\r\n            {/* selection column */}\r\n            {selectionColumnContent}\r\n\r\n            {/* field name column*/}\r\n            <td style={{\r\n              width: \"100px\",\r\n              fontFamily: \"ptserif-regular\",\r\n              fontSize: \"13px\"\r\n            }}>\r\n              {this.props.field.Name}\r\n            </td>\r\n\r\n            {/* field specification column */}\r\n            {/*fieldSpecColumnContent*/}\r\n\r\n            {/* field value column */}\r\n            <td>\r\n              <input type=\"text\" value={this.state.fieldValue}\r\n                     style={{fontFamily: \"courier new\"}}\r\n                     onChange={this.fieldValueChanged}\r\n                     ondblclick={this.showExpanded}/>\r\n              <Button size={\"sm\"} style={{\r\n                float: 'right',\r\n                fontSize: '10px',\r\n                marginRight: '10px'\r\n              }}\r\n                      onClick={this.showExpanded}> + </Button>{' '}\r\n              <Button size={\"sm\"} style={{\r\n                float: 'right',\r\n                fontSize: '10px'\r\n              }}\r\n                      onClick={this.closeExpanded}> - </Button>\r\n\r\n            </td>\r\n\r\n          </tr>\r\n          <tr>\r\n            <td colspan=\"3\">\r\n              <ExpandedText show={this.state.showExpanded}\r\n                            value={this.state.fieldValue}\r\n                            onClose={this.setNewValue}/>\r\n            </td>\r\n          </tr>\r\n          {children}\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\n}","class AppProps {\r\n\r\n  constructor() {\r\n    this.baseUrl = '';\r\n    this.sendMsgUrl = this.baseUrl + '/iso/v0/send';\r\n    this.loadMsgUrl = this.baseUrl + '/iso/v0/loadmsg';\r\n    this.allSpecsUrl = this.baseUrl + '/iso/v0/specs';\r\n    this.templateUrl = this.baseUrl + '/iso/v0/template';\r\n  }\r\n\r\n}\r\n\r\nlet appProps = new AppProps();\r\nexport default appProps;","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport appProps from \"./Properties\";\r\n\r\nexport default class SelectMessageDialog extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: props.show, selectedMsg: ''};\r\n    this.closeDialogSuccess = this.closeDialogSuccess.bind(this);\r\n    this.closeDialogFail = this.closeDialogFail.bind(this);\r\n    this.selectedMsgChanged = this.selectedMsgChanged.bind(this);\r\n  }\r\n\r\n  selectedMsgChanged(event) {\r\n    this.setState({selectedMsg: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //console.log(\"smd: componentDidUpdate\", this.state);\r\n    if (this.props.show === true && prevState.show === false) {\r\n\r\n      axios.get(appProps.loadMsgUrl, {\r\n        params: {\r\n          specId: this.props.specId,\r\n          msgId: this.props.msgId,\r\n        }\r\n      }).then(res => {\r\n        console.log(res);\r\n        this.setState(\r\n            {savedMsgs: res.data, selectedMsg: res.data[0], show: true});\r\n\r\n      }).catch(e => {\r\n            //FIXME\r\n            console.log(e);\r\n            this.setState({show: true, errorMessage: e.response.data});\r\n          }\r\n      )\r\n    }\r\n  }\r\n\r\n  closeDialogSuccess() {\r\n    this.setState({show: false});\r\n    this.props.closeLoadMsgDialog(this.state.selectedMsg);\r\n  }\r\n\r\n  closeDialogFail() {\r\n    this.setState({show: false});\r\n    //TODO:: also tell the parent that we're done\r\n    //and return the value of the selected saved msg\r\n    this.props.closeLoadMsgDialog(null);\r\n  }\r\n\r\n  render() {\r\n\r\n    let content;\r\n\r\n    if (this.state.show) {\r\n      if (this.state.errorMessage) {\r\n        content = <div>{this.state.errorMessage}</div>\r\n      } else {\r\n        content =\r\n            <React.Fragment>\r\n              <label style={{fontFamily: \"ptserif-regular\"}}> Saved\r\n                Message </label>{'  '}\r\n              <select style={{fontFamily: \"ptserif-regular\", width: \"200px\"}}\r\n                      value={this.state.selectedMsg}\r\n                      onChange={this.selectedMsgChanged}>\r\n                {this.state.savedMsgs.map((sm) => {\r\n                  return <option key={sm} value={sm}>{sm}</option>\r\n                })\r\n                }\r\n              </select>\r\n            </React.Fragment>\r\n      }\r\n    }\r\n\r\n    return (\r\n        <Modal show={this.state.show}\r\n               onHide={this.closeDialogFail}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Load Saved Message</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={this.closeDialogSuccess}>\r\n              OK\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={this.closeDialogFail}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n    );\r\n  }\r\n\r\n}","import React from 'react'\r\nimport IsoField from \"./IsoField\";\r\n\r\nexport default class ResponseSegment extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: props.show,\r\n      data: this.props.data,\r\n      msgTemplate: this.props.msgTemplate\r\n    }\r\n  }\r\n\r\n  appendFieldContent(content, field, idToField) {\r\n    content.push(<IsoField key={'response_seg_' + field.Id} field={field}\r\n                           id2Value={idToField}\r\n                           readOnly={true}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    if ((prevProps.show === false && this.props.show === true)\r\n        || (prevState.data !== this.props.data)) {\r\n      this.setState({\r\n        show: true,\r\n        data: this.props.data,\r\n        msgTemplate: this.props.msgTemplate\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(\"Rendering again...\");\r\n    let content = [];\r\n    if (this.state.show) {\r\n\r\n      let idToField = new Map();\r\n      this.state.data.forEach(f => {\r\n        console.log(\"setting  .. \", f.Id, f.Value);\r\n        idToField.set(f.Id, f.Value);\r\n      });\r\n\r\n      this.state.msgTemplate.Fields.map(field => {\r\n        this.appendFieldContent(content, field, idToField)\r\n      });\r\n\r\n      console.log(content);\r\n\r\n      return (\r\n          <React.Fragment>\r\n            {this.props.show ?\r\n                <table border=\"0\">\r\n                  <thead>\r\n                  <tr style={{\r\n                    fontFamily: \"ptserif-regular\",\r\n                    backgroundColor: \"#b0afff\",\r\n                    fontSize: \"15px\",\r\n                    borderBottom: 'solid',\r\n                    borderColor: 'blue'\r\n                  }}>\r\n                    <td colSpan=\"3\" align={\"center\"}>{\"Response Segment\"}</td>\r\n                  </tr>\r\n                  <tr style={{\r\n                    fontFamily: \"ptserif-regular\",\r\n                    backgroundColor: \"#b0afff\",\r\n                    fontSize: \"14px\",\r\n                  }}>\r\n                    <td align={\"center\"}>Selection</td>\r\n                    <td align={\"center\"}>Field</td>\r\n                    {/*<td align={\"center\"}\r\n                        style={{minWidth: \"50px\", maxWidth: \"200px\"}}>Field Spec\r\n                    </td>*/}\r\n                    <td align={\"center\"} style={{width: '220px'}}>Field Data</td>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {content}\r\n                  </tbody>\r\n                </table>\r\n                : null}\r\n          </React.Fragment>);\r\n\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n}","import React from 'react';\r\nimport axios from \"axios\";\r\n//import axios from 'axios'\r\nimport IsoField from './IsoField.js'\r\nimport SelectMessageDialog from './SelectMessageDialog.js'\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport appProps from './Properties.js'\r\nimport ResponseSegment from \"./ResponseSegment\";\r\n\r\nexport default class MessageStructure extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n    console.log(\"$msg_structure$\", this.props.specs, this.props.spec,\r\n        this.props.msg);\r\n\r\n    this.state = {\r\n      msgTemplate: null,\r\n      loaded: false,\r\n      spec: props.spec,\r\n      msg: props.msg,\r\n      shouldShow: props.showMsgTemplate,\r\n      targetServerIp: '127.0.0.1',\r\n      targetServerPort: '6666',\r\n      mliType: \"2I\",\r\n      errDialogVisible: false,\r\n      errorMessage: '',\r\n      showLoadMessagesDialog: false,\r\n      showResponse: false,\r\n      responseData: null\r\n    };\r\n\r\n    this.onFieldUpdate = this.onFieldUpdate.bind(this);\r\n    this.appendFieldContent = this.appendFieldContent.bind(this);\r\n    this.sendToHost = this.sendToHost.bind(this);\r\n    this.addFieldContent = this.addFieldContent.bind(this);\r\n    this.serverIpChanged = this.serverIpChanged.bind(this);\r\n    this.serverPortChanged = this.serverPortChanged.bind(this);\r\n    this.mliTypeChanged = this.mliTypeChanged.bind(this);\r\n    this.showErrorDialog = this.showErrorDialog.bind(this);\r\n    this.closeErrorDialog = this.closeErrorDialog.bind(this);\r\n    this.processError = this.processError.bind(this);\r\n    this.showLoadMessagesDialog = this.showLoadMessagesDialog.bind(this);\r\n    this.closeLoadMsgDialog = this.closeLoadMsgDialog.bind(this);\r\n    this.showUnImplementedError = this.showUnImplementedError.bind(this);\r\n\r\n  }\r\n\r\n  showUnImplementedError() {\r\n    this.setState({\r\n      errorMessage: 'This functionality has not been implemented. Please try the old version of application.',\r\n      errDialogVisible: true\r\n    })\r\n  }\r\n\r\n  closeLoadMsgDialog(selectedMsg) {\r\n    this.setState({showLoadMessagesDialog: false});\r\n    console.log(\"selected msg = \", selectedMsg);\r\n\r\n    if (selectedMsg != null) {\r\n      axios.get(appProps.loadMsgUrl, {\r\n        params: {\r\n          specId: this.state.spec.Id,\r\n          msgId: this.state.msg.Id,\r\n          dsName: selectedMsg\r\n        }\r\n      }).then(res => {\r\n            console.log(\"saved msg data\", res.data);\r\n            res.data.forEach(fd => {\r\n              let fieldComponent = this.state.isoMsg.get(fd.Id);\r\n              fieldComponent.setState({selected: true, fieldValue: fd.Value});\r\n            });\r\n          }\r\n      ).catch(e => {\r\n            console.log(e);\r\n            this.processError(e)\r\n          }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  showLoadMessagesDialog() {\r\n    this.setState({showLoadMessagesDialog: true})\r\n  }\r\n\r\n  closeErrorDialog() {\r\n    this.setState({errDialogVisible: false})\r\n  }\r\n\r\n  showErrorDialog() {\r\n    this.setState({errDialogVisible: true});\r\n  }\r\n\r\n  mliTypeChanged(e) {\r\n    this.setState({mliType: e.target.value});\r\n  }\r\n\r\n  serverIpChanged(e) {\r\n    this.setState({targetServerIp: e.target.value});\r\n  }\r\n\r\n  serverPortChanged(e) {\r\n    this.setState({targetServerPort: e.target.value});\r\n  }\r\n\r\n  addFieldContent(field, content) {\r\n\r\n    let fData = this.state.isoMsg.get(field.Id);\r\n    if (fData.state.selected) {\r\n      content.push({Id: field.Id, Value: fData.state.fieldValue});\r\n    }\r\n    field.Children.forEach(cf => {\r\n      if (fData.state.selected) {\r\n        this.addFieldContent(cf, content);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  sendToHost() {\r\n\r\n    let content = [];\r\n    this.state.msgTemplate.Fields.forEach(f => {\r\n      this.addFieldContent(f, content);\r\n    });\r\n    console.log(content);\r\n\r\n    let postData = 'host=' +\r\n        this.state.targetServerIp + '&' + 'port=' + this.state.targetServerPort\r\n        + '&' + 'mli=' + this.state.mliType\r\n        + '&' + 'specId=' + this.state.spec.Id + \"&\" + 'msgId='\r\n        + this.state.msg.Id + \"&\"\r\n        + \"msg=\"\r\n        + JSON.stringify(content);\r\n    axios.post(appProps.sendMsgUrl, postData).then(res => {\r\n      console.log(\"Response from server\", res);\r\n      this.setState({showResponse: true, responseData: res.data});\r\n\r\n    }).catch(\r\n        e => {\r\n          console.log(\"error = \", e);\r\n          this.processError(e)\r\n        })\r\n\r\n  }\r\n\r\n  processError(e) {\r\n    if (e.response.status === 400) {\r\n      this.setState(\r\n          {errorMessage: e.response.data, errDialogVisible: true});\r\n    } else {\r\n      this.setState(\r\n          {\r\n            errorMessage: 'Unexpected error from server - '\r\n                + e.response.status, errDialogVisible: true\r\n          });\r\n    }\r\n  }\r\n\r\n  onFieldUpdate(e) {\r\n    console.log(\"field updated =>\" + e.fieldName)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMessageTemplate(this.props.spec, this.props.msg)\r\n  }\r\n\r\n  getMessageTemplate(pSpec, pMsg) {\r\n    let spec = this.props.specs.find(s => {\r\n      if (s.Name === pSpec) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n    let msg = spec.Messages.find(m => {\r\n      if (m.Name === pMsg) {\r\n        return m;\r\n      }\r\n\r\n      return null;\r\n    });\r\n\r\n    let url = appProps.templateUrl + '/' + spec.Id + \"/\" + msg.Id;\r\n    console.log(url);\r\n    axios.get(url).then(\r\n        res => {\r\n          console.log(res.data);\r\n          let isoMsg = new Map();\r\n          isoMsg.set(\"msg_template\", res.data);\r\n          this.setState(\r\n              {\r\n                spec: spec,\r\n                msg: msg,\r\n                msgTemplate: res.data,\r\n                loaded: true,\r\n                isoMsg: isoMsg\r\n              });\r\n\r\n          console.log(\"MsgTemplate = \", this.state.msgTemplate);\r\n        }).catch(\r\n        err => this.setState({errorMessage: err, errDialogVisible: true}))\r\n  }\r\n\r\n  appendFieldContent(content, field, isoMsg, level) {\r\n    content.push(<IsoField key={field.Id} field={field} isoMsg={isoMsg}\r\n                           onFieldUpdate={this.onFieldUpdate}/>);\r\n  }\r\n\r\n  render() {\r\n\r\n    let content = [];\r\n    if (this.state.loaded === true) {\r\n      this.state.msgTemplate.Fields.map(field => {\r\n        this.appendFieldContent(content, field, this.state.isoMsg, 1)\r\n      })\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{\r\n          fontFamily: 'ptserif-regular',\r\n          fontSize: '12px',\r\n          alignContent: 'center',\r\n          alignSelf: 'center',\r\n          fill: 'aqua'\r\n        }}>\r\n\r\n          <Modal show={this.state.errDialogVisible}\r\n                 onHide={this.closeErrorDialog}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Error</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{this.state.errorMessage}</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.closeErrorDialog}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <SelectMessageDialog show={this.state.showLoadMessagesDialog}\r\n                               specId={this.state.spec.Id}\r\n                               msgId={this.state.msg.Id}\r\n                               closeLoadMsgDialog={this.closeLoadMsgDialog}\r\n          />\r\n\r\n          <div\r\n              style={{\r\n                height: \"100px\",\r\n                verticalAlign: \"baseline\",\r\n                alignItems: \"center\",\r\n                margin: \"10px\"\r\n              }}>\r\n\r\n\r\n            <table\r\n                style={{\r\n                  fontFamily: 'ptserif-regular',\r\n                  fontSize: '14px',\r\n                  alignSelf: 'center',\r\n                  borderBottom: 'solid',\r\n                  backgroundColor: '#4cffff'\r\n                }}>\r\n              <tr>\r\n                <td><label style={{width: '60px'}}>Server Ip </label>{'   '}\r\n                  <input type=\"text\" value={this.state.targetServerIp}\r\n                         onChange={this.serverIpChanged}/></td>\r\n                <td><label style={{width: '80px'}}>Server Port </label>\r\n                  <input type=\"text\" value={this.state.targetServerPort}\r\n                         onChange={this.serverPortChanged}/></td>\r\n                <td><label style={{width: '70px'}}>MLI Type </label>\r\n\r\n                  <select value={this.state.mliType}\r\n                          onChange={this.mliTypeChanged}>\r\n                    <option key={\"2i\"} value={\"2I\"}>2I</option>\r\n                    <option key={\"2e\"} value={\"2E\"}>2E</option>\r\n                  </select></td>\r\n              </tr>\r\n            </table>\r\n\r\n            <table>\r\n\r\n              <tr>\r\n                <td>\r\n\r\n                </td>\r\n              </tr>\r\n\r\n\r\n              <tr>\r\n                <td>\r\n                  <Button size={\"sm\"} onClick={this.showUnImplementedError}>Parse\r\n                    Raw</Button>{' '}\r\n                  <Button size={\"sm\"} onClick={this.showLoadMessagesDialog}>Load\r\n                    Message</Button>{' '}\r\n                  <Button size={\"sm\"} onClick={this.showUnImplementedError}>Save\r\n                    Message</Button>{' '}\r\n                  <Button size={\"sm\"} onClick={this.sendToHost}>Send</Button>\r\n\r\n\r\n                </td>\r\n              </tr>\r\n\r\n\r\n            </table>\r\n          </div>\r\n\r\n          {/* outer table for request and response */}\r\n          <table>\r\n\r\n            <thead>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n              <td>\r\n                <table border=\"0\">\r\n                  <thead>\r\n                  <tr style={{\r\n                    fontFamily: \"ptserif-regular\",\r\n                    backgroundColor: \"#EAFF13\",\r\n                    fontSize: \"15px\",\r\n                    borderBottom: 'solid',\r\n                    borderColor: 'blue'\r\n                  }}>\r\n                    <td colspan=\"3\" align={\"center\"}>{\"Request Segment\"}</td>\r\n                  </tr>\r\n                  <tr style={{\r\n                    fontFamily: \"ptserif-regular\",\r\n                    backgroundColor: \"#EAFF13\",\r\n                    fontSize: \"14px\",\r\n                  }}>\r\n                    <td align={\"center\"}>Selection</td>\r\n                    <td align={\"center\"}>Field</td>\r\n                    {/*<td align={\"center\"}\r\n                        style={{minWidth: \"50px\", maxWidth: \"200px\"}}>Field Spec\r\n                    </td>*/}\r\n                    <td align={\"center\"} style={{width: '220px'}}>Field Data\r\n                    </td>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {content}\r\n                  </tbody>\r\n                </table>\r\n\r\n              </td>\r\n              <td>{' '}</td>\r\n\r\n              <td>\r\n                <ResponseSegment show={this.state.showResponse}\r\n                                 data={this.state.responseData}\r\n                                 msgTemplate={this.state.msgTemplate}/>\r\n              </td>\r\n\r\n            </tr>\r\n            </tbody>\r\n\r\n          </table>\r\n\r\n\r\n          <div style={{height: \"10px\"}}>{' '}</div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}","import React from 'react';\r\nimport axios from 'axios'\r\nimport MessageStructure from './MessageStructure.js'\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport appProps from \"./Properties\";\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      specs: [],\r\n      currentSpec: \"Select\",\r\n      currentSpecMsg: \"\",\r\n      showMsgTemplate: false,\r\n      loaded: false,\r\n      errDialogVisible: false,\r\n      errorMessage: ''\r\n    };\r\n    this.specChanged = this.specChanged.bind(this);\r\n    this.messageChanged = this.messageChanged.bind(this);\r\n    this.msgTemplateRef = React.createRef();\r\n\r\n  }\r\n\r\n  closeErrorDialog() {\r\n    this.setState({errDialogVisible: false})\r\n  }\r\n\r\n  showErrorDialog() {\r\n    this.setState({errDialogVisible: true});\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(appProps.allSpecsUrl).then(res => {\r\n      console.log(res.data);\r\n      this.setState({specs: res.data, loaded: true});\r\n    }).catch(\r\n        err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n\r\n    let msg;\r\n    let spec;\r\n\r\n    if (this.state.loaded === true) {\r\n      spec = this.getCurrentSpec();\r\n      if (spec == null) {\r\n        spec = this.state.specs[0];\r\n      }\r\n\r\n      if (!this.state.currentSpecMsg) {\r\n        msg = spec.Messages[0].Name;\r\n      } else {\r\n        msg = this.state.currentSpecMsg;\r\n      }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n          <Modal show={this.state.errDialogVisible}\r\n                 onHide={this.closeErrorDialog}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Error</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{this.state.errorMessage}</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.closeErrorDialog}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <div align=\"center\"\r\n               style={{\r\n                 verticalAlign: \"baseline\",\r\n                 backgroundColor: \"#AB68FF\",\r\n                 height: \"80px\"\r\n               }}>\r\n\r\n            <table style={{\r\n              fontFamily: 'ptserif-regular',\r\n              left: '50%',\r\n              top: '50%',\r\n            }}>\r\n\r\n              <tbody>\r\n              <tr>\r\n                <td>Message Specification</td>\r\n                <td style={{width: \"100px\"}}></td>\r\n                <td>{this.specsDropDown()}</td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Message</td>\r\n                <td style={{width: \"100px\"}}></td>\r\n                <td>{this.messagesDropDown()}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div align=\"center\">\r\n            {\r\n              this.state.loaded && this.state.currentSpec !== \"Select\" ?\r\n                  <MessageStructure key={this.state.currentSpec + \"_\" + msg}\r\n                                    ref={this.msgTemplateRef}\r\n                                    specs={this.state.specs}\r\n                                    spec={this.state.currentSpec}\r\n                                    msg={msg}/>\r\n                  : null\r\n            }\r\n          </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n  }\r\n\r\n  specChanged(event) {\r\n\r\n    this.setState({\r\n      currentSpec: event.target.value,\r\n      currentSpecMsg: \"\"\r\n    });\r\n\r\n    console.log(event.target.value);\r\n    if (this.state.loaded && event.target.value !== \"Select\") {\r\n      console.log(\"calling update - specChanged\");\r\n      let spec = this.getSpecByName(event.target.value);\r\n      //console.log(\"current spec \", event.target.value);\r\n      /*if (this.msgTemplateRef.current) {\r\n        this.msgTemplateRef.current.update(spec.Name, spec.Messages[0].Name);\r\n      }*/\r\n    }\r\n  }\r\n\r\n  messageChanged(event) {\r\n    this.setState({currentSpecMsg: event.target.value});\r\n\r\n    if (this.state.loaded && this.state.currentSpec !== \"Select\") {\r\n      console.log(\"calling update - msgChanged\");\r\n\r\n      /*if (this.msgTemplateRef.current) {\r\n        this.msgTemplateRef.current.update(this.state.currentSpec,\r\n            event.target.value);\r\n      }*/\r\n    }\r\n  }\r\n\r\n  // builds a combo box for specifications\r\n  specsDropDown() {\r\n    return (\r\n        <select style={{fontFamily: \"ptserif-regular\", width: \"200px\",}}\r\n                onChange={this.specChanged}>\r\n          <option key={\"Select\"} value={\"Select\"}>Select</option>\r\n          {\r\n            this.state.specs.map((s) => {\r\n              return <option key={s.Name} value={s.Name}>{s.Name}</option>\r\n            })\r\n          }\r\n\r\n        </select>);\r\n  }\r\n\r\n  // builds and returns a combo box for messages for the current spec\r\n  messagesDropDown() {\r\n\r\n    let spec;\r\n\r\n    if (this.state.loaded) {\r\n      spec = this.getCurrentSpec();\r\n    }\r\n\r\n    // no spec loaded\r\n    if (this.state.currentSpec === \"Select\") {\r\n      return (<select></select>);\r\n    } else {\r\n\r\n      return (\r\n\r\n          <select value={this.state.currentSpecMsg}\r\n                  style={{fontFamily: \"ptserif-regular\", width: \"150px\"}}\r\n                  onChange={this.messageChanged}>\r\n            {\r\n              spec.Messages.map(msg => {\r\n                return <option key={msg.Id}\r\n                               value={msg.Name}>{msg.Name}</option>\r\n              })\r\n            }\r\n\r\n          </select>\r\n\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // returns the currently loaded spec (if there is one) else null\r\n  getCurrentSpec() {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.Name === this.state.currentSpec) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  // returns specification given its name\r\n  getSpecByName(name) {\r\n    return this.state.specs.find((s, i) => {\r\n      if (s.Name === name) {\r\n        return s;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar","import React from 'react';\nimport './App.css';\nimport NavBar from './NavBar.js'\n\nfunction App() {\n  return (\n      <div>\n        <h1 style={{fontFamily: \"shadows-into-light\"}}>ISO WebSim - ISO8583 Web\n          Simulator</h1>\n        <a style={{fontFamily: 'ptserif-regular', fontSize: '12px'}}\n           href={\"/iso/home\"} target={\"_blank\"}>[Non React App]</a>\n        <a style={{fontFamily: 'ptserif-regular', fontSize: '12px'}}\n          href={\"/iso/v0/server\"} target={\"_blank\"}>[Manage Servers]</a>\n\n        <div className=\"App\">\n          <NavBar/>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//ReactDOM.render(<NavBar />, document.getElementById('nav_bar'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}